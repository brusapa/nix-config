# This is the CoolerControl configuration file.
# Comments and most formatting is preserved.
# Most of this file you can edit by hand, but it is recommended to stop the daemon when doing so.
# -------------------------------


# Unique ID Device List
# -------------------------------
# This is a simple UID and device name key-value pair, that is automatically generated at startup
#  to help humans distinguish which UID belongs to which device in this config file.
#  Only the device name is given here, complete Device information can be requested from the API.
#  UIDs are generated sha256 hashes based on specific criteria to help determine device uniqueness.
# ANY CHANGES WILL BE OVERWRITTEN.
# Example:
# 21091c4fb341ceab6236e8c9e905ccc263a4ac08134b036ed415925ba4c1645d = "Nvidia GPU"
[devices]
44ed162552b18616158b843873b335d5cdb71ba2c7c78be02ab63c7877b80741 = "Composite"
e486ca9b517e4b34d7cf71340d2e22157ac2fea7051d7ea5eecb3fc75465301a = "13th Gen Intel(R) Core(TM) i5-13600K"
a429ee525bcaf308103a37be813cc0227e5faa12dabe84e43cf44367d9516b76 = "nvme1"
6652394d0545f0577cc613773ca85145b28fb5a266512af9e414704d3ed10744 = "Gigabyte RGB Fusion 2.0 5702 Controller"
33f022b13ddcf5eef2951eec6ee8e408eabdf92b3ae22bbc7d2c06decea183cb = "acpitz"
7442ece48a26c31e110bbb1d21577e4a7b4613be5cce8adee1fe2d0832d11696 = "amdgpu"
51f492cae6e0c885466a4e55f7f65e72c900ff4a8c73af3075c08c919428efac = "gigabyte_wmi"
524778e4a6e810a8814e6cf90367bc8d5f8faf67bb9e44758f6219d9ea5d76cf = "iwlwifi_1"
19e098e312e1b1b39163a343ea22b6ea17f18ec1a803ffe0ce44f5bacd6076ee = "Custom Sensors"
4a30d7c06de3d5593bcdad1bd547c70c66954c53c8770e1d04724bae5af9dd9e = "nvme0"
fa49f4645cba12961942172e0455e53675b4adbc2ed077a740863e40266e9803 = "it8628"


# Legacy690 Option for devices
# -------------------------------
# There are 2 Asetek 690LC liquid coolers that have the same device ID.
#  To tell them apart we need user input to know which cooler we're actually dealing with.
#  This is an assignment of liquidctl AseTek690LC device UIDs to true/false:
#   true = Legacy690 Cooler aka NZXT Kraken X40, X60, X31, X41, X51 and X61
#   false = Modern690 Cooler aka EVGA CLC 120 (CLC12), 240, 280 and 360
# Example:
# 21091c4fb341ceab6236e8c9e905ccc263a4ac08134b036ed415925ba4c1645d = true
[legacy690]


# Device Settings
# -------------------------------
# This is where CoolerControl will save device settings for the cooresponding device.
# Settings can be set here also specifically by hand. (restart required for applying)
# These settings are applied on startup and each is overwritten once a new setting
# has been applied.
# Example:
# [device-settings.4b9cd1bc5fb2921253e6b7dd5b1b011086ea529d915a86b3560c236084452807]
# pump = { speed_fixed = 30 }
# logo = { lighting = { mode = "fixed", colors = [[0, 255, 255]] } }
# ring = { lighting = { mode = "spectrum-wave", backward = true, colors = [] } }
[device-settings]

[device-settings.fa49f4645cba12961942172e0455e53675b4adbc2ed077a740863e40266e9803]
fan3 = { profile_uid = "7549a32b-a77c-4ef3-b803-d90c8cb3b3ca" }
fan2 = { profile_uid = "7549a32b-a77c-4ef3-b803-d90c8cb3b3ca" }
fan1 = { profile_uid = "ca4881bb-f8c8-44ec-9ac5-2f928211a27d" }
fan4 = { profile_uid = "7549a32b-a77c-4ef3-b803-d90c8cb3b3ca" }
fan6 = { profile_uid = "7549a32b-a77c-4ef3-b803-d90c8cb3b3ca" }
fan5 = { profile_uid = "ca4881bb-f8c8-44ec-9ac5-2f928211a27d" }


# A list of profiles to be used with each device's settings
# -------------------------------
[[profiles]]
uid = "0"
name = "Default Profile"
p_type = "Default"
function = "0"

[[profiles]]
uid = "7549a32b-a77c-4ef3-b803-d90c8cb3b3ca"
name = "Chassis Profile"
p_type = "Graph"
speed_profile = [[0.0, 30], [60.0, 30], [70.0, 40], [80.0, 50], [100.0, 100]]
temp_source = { temp_name = "sensor1", device_uid = "19e098e312e1b1b39163a343ea22b6ea17f18ec1a803ffe0ce44f5bacd6076ee" }
function_uid = "16ee3a97-bae6-4195-9651-bf823da23c79"

[[profiles]]
uid = "ca4881bb-f8c8-44ec-9ac5-2f928211a27d"
name = "CPU Profile"
p_type = "Graph"
speed_profile = [[20.0, 30], [60.0, 30], [70.0, 40], [80.0, 50], [100.0, 100]]
temp_source = { temp_name = "temp1", device_uid = "e486ca9b517e4b34d7cf71340d2e22157ac2fea7051d7ea5eecb3fc75465301a" }
function_uid = "16ee3a97-bae6-4195-9651-bf823da23c79"

# A list of functions to be applied to the various profiles
# -------------------------------
[[functions]]
uid = "0"
name = "Default Function"
f_type = "Identity"

[[functions]]
uid = "16ee3a97-bae6-4195-9651-bf823da23c79"
name = "Standard Function"
f_type = "Standard"
duty_minimum = 2
duty_maximum = 100
response_delay = 5
deviance = 2.0
only_downward = false


# Cooler Control Settings
# -------------------------------
# This is where CoolerControl specifc general and specifc device settings are set. These device
# settings differ from the above Device Settings, in that they are applied to CoolerControl,
# and not on the devices themselves. For ex. settings such as disabling/enabling a particular device.
[settings]

# whether to apply the saved device settings on daemon startup
apply_on_boot = true

# Will skip initialization calls for liquidctl devices. ONLY USE if you are doing initialiation manually.
no_init = false

# Handle dynamic temp sources like cpu and gpu with a moving average rather than immediately up and down.
handle_dynamic_temps = false

# Startup Delay (seconds) is an integer value between 0 and 10
startup_delay = 2

# Smoothing level (averaging) for temp and load values of CPU and GPU devices. (0-5)
# This only affects the returned values from the /status endpoint, not internal values
smoothing_level = 0

# For ThinkPads, wheather to use the 'full-speed' option when settings the fan to 100%
# This option drives the fan as fast as it can go, which might exceed hardware limits,
# so use this level with caution.
thinkpad_full_speed = false

[settings.a429ee525bcaf308103a37be813cc0227e5faa12dabe84e43cf44367d9516b76]
name = "Samsung 980 PRO Boot"

[settings.4a30d7c06de3d5593bcdad1bd547c70c66954c53c8770e1d04724bae5af9dd9e]
name = "Samsung 980 PRO Home"

[settings.6652394d0545f0577cc613773ca85145b28fb5a266512af9e414704d3ed10744]
name = "Gigabyte RGB Fusion 2.0 5702 Controller"
disable = true

[settings.33f022b13ddcf5eef2951eec6ee8e408eabdf92b3ae22bbc7d2c06decea183cb]
name = "acpitz"
disable = true

[settings.51f492cae6e0c885466a4e55f7f65e72c900ff4a8c73af3075c08c919428efac]
name = "gigabyte_wmi"
disable = true

[[custom_sensors]]
id = "sensor1"
cs_type = "Mix"
mix_function = "Max"

[[custom_sensors.sources]]
temp_source = { temp_name = "temp1", device_uid = "e486ca9b517e4b34d7cf71340d2e22157ac2fea7051d7ea5eecb3fc75465301a" }
weight = 1

[[custom_sensors.sources]]
temp_source = { temp_name = "temp1", device_uid = "7442ece48a26c31e110bbb1d21577e4a7b4613be5cce8adee1fe2d0832d11696" }
weight = 1

# CoolerControl Device settings Example:
# [settings.4b9cd1bc5fb2921253e6b7dd5b1b011086ea529d915a86b3560c236084452807]
# disabled = true

# API Address and Port:
# The daemon by default uses port 11987 and the standard loopback IPv4 and IPv6 addresses.
# You can set an IPv4, IPv6 or both addresses to listen on. An empty string will disable the address.
# It is highly recommended to use the default settings unless you have a specific reason to change them
# and understand the implications. The API is not secure and should not be exposed to a public network.
# For more information see the project wiki.
# Example:
# port = 11987
# ipv4_address = "127.0.0.1"
# ipv6_address = "::1"
