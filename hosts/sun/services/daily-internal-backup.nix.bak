{ config, lib, ... }:
{

  options.backup.job = lib.mkOption {
    type = lib.types.attrsOf (lib.types.submodule {
      options = {
        paths = lib.mkOption {
          type = lib.types.listOf lib.types.str;
          default = [];
          description = "Paths to back up";
        };
        exclude = lib.mkOption {
          type = lib.types.listOf lib.types.str;
          default = [];
          description = "Paths to exclude from backup";
        };
        backupPrepareCommand = lib.mkOption {
          type = lib.types.nullOr lib.types.str;
          default = null;
          description = "Optional commands to  run before backup";
        };
      };
    });
  };

  config = {
    # Import the needed secrets
    sops = {
      secrets = {
        backup-password = {
          sopsFile = ../secrets.yaml;
        };
      };
    };

    # TODO: Validar que al menos haya un backup.job configurado
    # TODO: Validar que no haya ningún backup.job con paths vacío

    services.restic.backups.daily-internal = {
      repository = "/mnt/internalBackup/sun";
      passwordFile = config.sops.secrets.backup-password.path;
      initialize = true;

      backupPrepareCommand = ''
        # Backup Immich database
        systemctl stop immich-server.service immich-machine-learning.service
        sudo -u postgres pg_dump immich > /zstorage/photos/database-backup/immich.sql
        systemctl start immich-server.service immich-machine-learning.service

        # Backup paperless
        systemctl start paperless-exporter.service
      '';

      paths = [
        "/zstorage/photos"
        "/zstorage/users"
        "/zstorage/backups/paperless"
        "/zstorage/backups/vaultwarden"
        "/zstorage/backups/home-assistant"
        "/var/lib/home-assistant/zigbee2mqtt"
        "/var/lib/webdav/obsidian-personal"
        "/var/lib/webdav/obsidian-work"
      ];

      exclude = [
        # Immich excluded paths directories
        "/zstorage/photos/backups" 
        "/zstorage/photos/encoded-video" 
      ];

      timerConfig = {
        OnCalendar = "daily";
        Persistent = true;
      };

      pruneOpts = [
        "--keep-daily 7"
        "--keep-monthly 12"
      ];
    };
  };
}
